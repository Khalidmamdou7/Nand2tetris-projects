// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM16K.hdl

/**
 * Memory of 16K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM16K {
    IN in[16], load, address[14];
    OUT out[16];

    PARTS:
    Mux4Way16(a=ram1, b=ram2 ,c=ram3 ,d=ram4 ,sel=address[0..1] ,out=out);
	DMux4Way(in=load ,sel=address[0..1], a=ldram1, b=ldram2 ,c=ldram3 ,d=ldram4 );



    RAM4K(in=in, load=ldram1 ,address=address[2..13] ,out=ram1);
    RAM4K(in=in, load=ldram2 ,address=address[2..13] ,out=ram2);
    RAM4K(in=in, load=ldram3 ,address=address[2..13] ,out=ram3);
    RAM4K(in=in, load=ldram4 ,address=address[2..13] ,out=ram4);

}